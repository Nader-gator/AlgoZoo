# Generated by Django 2.2.1 on 2019-10-04 02:17

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('coderunner', '0005_auto_20191004_0209'),
    ]

    operations = [
        migrations.AlterField(
            model_name='test',
            name='file_name',
            field=models.CharField(choices=[('2', 'a_b_sqrt2.py'), ('3', 'absent_value_array.py'), ('4', 'adding_credits.py'), ('5', 'advance_by_offsets.py'), ('6', 'alternating_array.py'), ('7', 'anagrams.py'), ('8', 'apply_permutation.py'), ('9', 'arbitrage.py'), ('10', 'binary_tree_node.py'), ('11', 'binary_tree_with_parent_prototype.py'), ('12', 'binomial_coefficients.py'), ('13', 'bonus.py'), ('14', 'bst_from_preorder.py'), ('15', 'bst_from_sorted_array.py'), ('16', 'bst_merge.py'), ('17', 'bst_node.py'), ('18', 'bst_to_sorted_list.py'), ('19', 'buy_and_sell_stock.py'), ('20', 'buy_and_sell_stock_k_times.py'), ('21', 'buy_and_sell_stock_twice.py'), ('22', 'calendar_rendering.py'), ('23', 'circular_queue.py'), ('24', 'closest_int_same_weight.py'), ('25', 'collatz_checker.py'), ('26', 'combinations.py'), ('27', 'convert_base.py'), ('28', 'copy_posting_list.py'), ('29', 'count_bits.py'), ('30', 'count_inversions.py'), ('31', 'deadlock_detection.py'), ('32', 'defective_jugs.py'), ('33', 'delete_from_list.py'), ('34', 'delete_kth_last_from_list.py'), ('35', 'delete_node_from_list.py'), ('36', 'descendant_and_ancestor_in_bst.py'), ('37', 'directory_path_normalization.py'), ('38', 'do_lists_overlap.py'), ('39', 'do_terminated_lists_overlap.py'), ('40', 'doubly_list_node.py'), ('41', 'drawing_skyline.py'), ('42', 'dutch_national_flag.py'), ('43', 'element_appearing_once.py'), ('44', 'enumerate_balanced_parentheses.py'), ('45', 'enumerate_palindromic_decompositions.py'), ('46', 'enumerate_trees.py'), ('47', 'evaluate_rpn.py'), ('48', 'even_odd_array.py'), ('49', 'even_odd_list_merge.py'), ('50', 'fibonacci.py'), ('51', 'find_salary_threshold.py'), ('52', 'first_missing_positive_entry.py'), ('53', 'gcd.py'), ('54', 'graph_clone.py'), ('55', 'gray_code.py'), ('56', 'group_equal_entries.py'), ('57', 'h_index.py'), ('58', 'hanoi.py'), ('59', 'huffman_coding.py'), ('60', 'insert_in_list.py'), ('61', 'insert_operators_in_string.py'), ('62', 'int_as_array_increment.py'), ('63', 'int_as_array_multiply.py'), ('64', 'int_as_list_add.py'), ('65', 'int_square_root.py'), ('66', 'intersect_sorted_arrays.py'), ('67', 'interval_add.py'), ('68', 'intervals_union.py'), ('69', 'is_anonymous_letter_constructible.py'), ('70', 'is_array_dominated.py'), ('71', 'is_circuit_wirable.py'), ('72', 'is_list_cyclic.py'), ('73', 'is_list_palindromic.py'), ('74', 'is_number_palindromic.py'), ('75', 'is_string_decomposable_into_words.py'), ('76', 'is_string_in_matrix.py'), ('77', 'is_string_palindromic_punctuation.py'), ('78', 'is_string_permutable_to_palindrome.py'), ('79', 'is_tree_a_bst.py'), ('80', 'is_tree_balanced.py'), ('81', 'is_tree_symmetric.py'), ('82', 'is_valid_parenthesization.py'), ('83', 'is_valid_sudoku.py'), ('84', 'k_closest_stars.py'), ('85', 'k_largest_in_heap.py'), ('86', 'k_largest_values_in_bst.py'), ('87', 'knapsack.py'), ('88', 'kth_largest_element_in_long_array.py'), ('89', 'kth_largest_element_in_two_sorted_arrays.py'), ('90', 'kth_largest_in_array.py'), ('91', 'kth_node_in_tree.py'), ('92', 'largest_rectangle_under_skyline.py'), ('93', 'left_right_justify_text.py'), ('94', 'levenshtein_distance.py'), ('95', 'line_through_most_points.py'), ('96', 'list_cyclic_right_shift.py'), ('97', 'list_node.py'), ('98', 'longest_contained_interval.py'), ('99', 'longest_increasing_subarray.py'), ('100', 'longest_nondecreasing_subsequence.py'), ('101', 'longest_subarray_with_distinct_values.py'), ('102', 'longest_subarray_with_sum_constraint.py'), ('103', 'longest_substring_with_matching_parentheses.py'), ('104', 'look_and_say.py'), ('105', 'lowest_common_ancestor.py'), ('106', 'lowest_common_ancestor_close_ancestor.py'), ('107', 'lowest_common_ancestor_in_bst.py'), ('108', 'lowest_common_ancestor_with_parent.py'), ('109', 'lru_cache.py'), ('110', 'majority_element.py'), ('111', 'matrix_connected_regions.py'), ('112', 'matrix_enclosed_regions.py'), ('113', 'matrix_rotation.py'), ('114', 'max_of_sliding_window.py'), ('115', 'max_product_all_but_one.py'), ('116', 'max_safe_height.py'), ('117', 'max_square_submatrix.py'), ('118', 'max_submatrix.py'), ('119', 'max_sum_subarray.py'), ('120', 'max_teams_in_photograph.py'), ('121', 'max_trapped_water.py'), ('122', 'max_water_trappable.py'), ('123', 'maximum_subarray_in_circular_array.py'), ('124', 'minimum_distance_3_sorted_arrays.py'), ('125', 'minimum_points_covering_intervals.py'), ('126', 'minimum_waiting_time.py'), ('127', 'minimum_weight_path_in_a_triangle.py'), ('128', 'n_queens.py'), ('129', 'nearest_repeated_entries.py'), ('130', 'next_permutation.py'), ('131', 'nonuniform_random_number.py'), ('132', 'number_of_score_combinations.py'), ('133', 'number_of_traversals_matrix.py'), ('134', 'number_of_traversals_staircase.py'), ('135', 'offline_sampling.py'), ('136', 'online_median.py'), ('137', 'online_sampling.py'), ('138', 'parity.py'), ('139', 'pascal_triangle.py'), ('140', 'path_sum.py'), ('141', 'permutations.py'), ('142', 'phone_number_mnemonic.py'), ('143', 'picking_up_coins.py'), ('144', 'pivot_list.py'), ('145', 'posting_list_node.py'), ('146', 'power_set.py'), ('147', 'power_x_y.py'), ('148', 'pretty_printing.py'), ('149', 'prime_sieve.py'), ('150', 'primitive_divide.py'), ('151', 'primitive_multiply.py'), ('152', 'queue_from_stacks.py'), ('153', 'queue_with_max.py'), ('154', 'random_permutation.py'), ('155', 'random_subset.py'), ('156', 'range_lookup_in_bst.py'), ('157', 'real_square_root.py'), ('158', 'rectangle_intersection.py'), ('159', 'refueling_schedule.py'), ('160', 'regular_expression.py'), ('161', 'remove_duplicates.py'), ('162', 'remove_duplicates_from_sorted_list.py'), ('163', 'replace_and_remove.py'), ('164', 'reverse_bits.py'), ('165', 'reverse_digits.py'), ('166', 'reverse_sublist.py'), ('167', 'reverse_words.py'), ('168', 'road_network.py'), ('169', 'roman_to_integer.py'), ('170', 'rook_attack.py'), ('171', 'rotate_array.py'), ('172', 'run_length_compression.py'), ('173', 'search_entry_equal_to_index.py'), ('174', 'search_first_greater_value_in_bst.py'), ('175', 'search_first_key.py'), ('176', 'search_for_min_max_in_array.py'), ('177', 'search_for_missing_element.py'), ('178', 'search_frequent_items.py'), ('179', 'search_in_list.py'), ('180', 'search_maze.py'), ('181', 'search_row_col_sorted_matrix.py'), ('182', 'search_shifted_sorted_array.py'), ('183', 'search_unknown_length_array.py'), ('184', 'smallest_nonconstructible_value.py'), ('185', 'smallest_subarray_covering_all_values.py'), ('186', 'smallest_subarray_covering_set.py'), ('187', 'snake_string.py'), ('188', 'sort_almost_sorted_array.py'), ('189', 'sort_increasing_decreasing_array.py'), ('190', 'sort_list.py'), ('191', 'sorted_array_remove_dups.py'), ('192', 'sorted_arrays_merge.py'), ('193', 'sorted_list_to_bst.py'), ('194', 'sorted_lists_merge.py'), ('195', 'spiral_ordering_segments.py'), ('196', 'spreadsheet_encoding.py'), ('197', 'stack_with_max.py'), ('198', 'string_decompositions_into_dictionary_words.py'), ('199', 'string_integer_interconversion.py'), ('200', 'string_transformability.py'), ('201', 'substring_match.py'), ('202', 'successor_in_tree.py'), ('203', 'sudoku_solve.py'), ('204', 'sum_root_to_leaf.py'), ('205', 'sunset_view.py'), ('206', 'swap_bits.py'), ('207', 'task_pairing.py'), ('208', 'three_sum.py'), ('209', 'tree_connect_leaves.py'), ('210', 'tree_exterior.py'), ('211', 'tree_from_preorder_inorder.py'), ('212', 'tree_from_preorder_with_null.py'), ('213', 'tree_inorder.py'), ('214', 'tree_level_order.py'), ('215', 'tree_postorder.py'), ('216', 'tree_preorder.py'), ('217', 'tree_right_sibling.py'), ('218', 'tree_with_parent_inorder.py'), ('219', 'two_sorted_arrays_merge.py'), ('220', 'two_sum.py'), ('221', 'uniform_random_number.py'), ('222', 'valid_ip_addresses.py'), ('223', 'zip_list.py')], default=('2', 'a_b_sqrt2.py'), max_length=100),
        ),
    ]
